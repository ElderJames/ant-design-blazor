@namespace AntDesign
@inherits AntDomComponentBase
@using AntDesign.Internal

<div style="@Style" id="@Id">
    <CascadingValue Value='$"ant-select-dropdown"' Name="PrefixCls">
        <OverlayTrigger Visible="@ShowPanel"
                        IsButton="@true"
                        Disabled="false"
                        Trigger="new TriggerType[] { TriggerType.Click }"
                        OverlayEnterCls="slide-up-enter slide-up-enter-active slide-up"
                        OverlayLeaveCls="slide-up-leave slide-up-leave-active slide-up">
            <Overlay>
                <CascadingValue Value="this">
                    <div style="max-height: 256px; overflow-y: auto; overflow-anchor: none;">
                        <div style="display: flex; flex-direction: column;">
                            @if (DataSource.Value != null)
                            {
                                foreach (var option in DataSource.Match<IList<AutocompleteDataSourceItem>>(
                                    f0 => f0,
                                    f1 => f1.Select(x => new AutocompleteDataSourceItem(x, x)).ToList(),
                                    f2 => f2.Select(x => new AutocompleteDataSourceItem(x.ToString(), x.ToString())).ToList()))
                                {
                                    <AutoCompleteOption Value="@option.Value" Label="@option.Label">
                                        @option.Label
                                    </AutoCompleteOption>
                                }
                            }
                            else
                            {
                                @AutoCompleteOptions
                            }
                        </div>
                    </div>
                </CascadingValue>
            </Overlay>
            <ChildContent>
                <CascadingValue Value="this">
                    @ChildContent
                </CascadingValue>

            </ChildContent>
        </OverlayTrigger>
    </CascadingValue>
</div>