<Calendar DateCellRender="DateCellRender" MonthCellRender="MonthCellRender" />

@code {

    private class ListData
    {
        public string Type;
        public string Content;
    }

    private static IEnumerable<ListData> GetListData(DateTime value)
    {
        var listData = value.Day switch
        {
            8 => new List<ListData>
            {
                new()
                {
                    Type = "warning",
                    Content = "This is warning event."
                },
                new()
                {
                    Type = "success",
                    Content = "This is usual event."
                }
            },
            10 => new List<ListData>
            {
                new()
                {
                    Type = "warning",
                    Content = "This is warning event."
                },
                new()
                {
                    Type = "success",
                    Content = "This is usual event."
                },
                new()
                {
                    Type = "error",
                    Content = "This is error event."
                }
            },
            15 => new List<ListData>
            {
                new()
                {
                    Type = "warning",
                    Content = "This is warning event"
                },
                new()
                {
                    Type = "success",
                    Content = "This is very long usual event。。...."
                },
                new()
                {
                    Type = "error",
                    Content = "This is error event 1."
                },
                new()
                {
                    Type = "error",
                    Content = "This is error event 2."
                },
                new()
                {
                    Type = "error",
                    Content = "This is error event 3."
                },
                new()
                {
                    Type = "error",
                    Content = "This is error event 4."
                }
            },
            _ => null
            };

        return listData ?? new List<ListData>();
    }

    private RenderFragment DateCellRender(DateTime value)
    {
        var listData = GetListData(value);
        return @<Template>
                   <ul class="events">
                       @foreach (var data in listData)
                       {
                           <li key="@data.Content">
                               <Badge Status="@data.Type" Text="@data.Content"/>
                           </li>
                       }
                   </ul>
               </Template>;
    }

    private static int? GetMonthData(DateTime value) => value.Month == 8 ? (int?) 1394 : null;

    private RenderFragment MonthCellRender(DateTime value)
    {
        var num = GetMonthData(value);

        if (num == null)
        {
            return null;
        }

        return @<Template>
                   <div className="notes-month">
                       <section>@num</section>
                       <span>Backlog number</span>
                   </div>
               </Template>;
    }
}

<Style>
    .events {
        list-style: none;
        margin: 0;
        padding: 0;
    }

        .events .ant-badge-status {
            overflow: hidden;
            white-space: nowrap;
            width: 100%;
            text-overflow: ellipsis;
            font-size: 12px;
        }

    .notes-month {
        text-align: center;
        font-size: 28px;
    }

        .notes-month section {
            font-size: 28px;
        }
</Style>