@namespace AntDesign.Internal
@typeparam TValue
@inherits DatePickerPanelBase<TValue>
@using System.Globalization;

@{
    var calendar = CultureInfo.InvariantCulture.Calendar;

    DateTime monthFirstDayDate = new DateTime(PickerValue.Year, PickerValue.Month, 1, 0, 0, 0);
    int monthFirstDayOfWeek = (int)calendar.GetDayOfWeek(monthFirstDayDate);

    // sunday should be 7
    if (monthFirstDayOfWeek == 0)
    {
        monthFirstDayOfWeek = 7;
    }

    int diffDay = 1 - monthFirstDayOfWeek;
    DateTime startDate = monthFirstDayDate.AddDays(diffDay);
}

<div class='@(DatePicker.IsShowTime ? $"{DatePicker.PrefixCls}-datetime-panel" : "")'>
    <DatePickerTemplate TValue="TValue" PickerIndex="@PickerIndex"
                           MaxRow="6"
                           MaxCol="7"
                           ViewStartDate="startDate"
                           ShowFooter="@DatePicker.ShowToday"
                           GetRowClass="GetRowClass"
                           IsInView="date => DateHelper.IsSameMonth(date, PickerValue)"
                           IsToday="date => DateHelper.IsSameDay(date, DatePicker.CurrentDate)"
                           IsSelected="date => !IsWeek && DateHelper.IsSameDay(date, Value)"
                           GetColTitle='date => date.ToString("yyyy-MM-dd")'
                           OnRowSelect="OnRowSelect"
                           OnValueSelect="OnValueSelect"
                           GetNextColValue="date => date.AddDays(1)">
        <RenderPickerHeader>
            <DatePickerHeader TValue="TValue"
                              PrefixCls="@PrefixCls"
                              Picker="@Picker"
                              PickerIndex="@PickerIndex"
                              GetIndexPickerValue="GetIndexPickerValue"
                              GetIndexValue="GetIndexValue"
                              ChangePickerType="ChangePickerType"
                              ChangePickerValue="ChangePickerValue"
                              ShowSuperPreChange="@(!(IsRange && PickerIndex == 1))"
                              ShowPreChange="@(!(IsRange && PickerIndex == 1))"
                              ShowNextChange="@(!(IsRange && PickerIndex == 0))"
                              ShowSuperNextChange="@(!(IsRange && PickerIndex == 0))"/>
        </RenderPickerHeader>
        <RenderTableHeader>
            <tr>
                @if (IsWeek)
                {
                    <th></th>
                }
                <th>一</th>
                <th>二</th>
                <th>三</th>
                <th>四</th>
                <th>五</th>
                <th>六</th>
                <th>日</th>
            </tr>
        </RenderTableHeader>
        <RenderFisrtCol>
            @if (IsWeek)
            {
                <td class="@(PrefixCls)-cell @(PrefixCls)-cell-weak">
                    @DateHelper.GetWeekOfYear(context)
                </td>
            }
        </RenderFisrtCol>
        <RenderColValue Context="currentColDate">
            @currentColDate.Day
        </RenderColValue>
    </DatePickerTemplate>
</div>

@if (RenderExtraFooter != null)
{
    <div class="@(PrefixCls)-footer">
        <div class="@(PrefixCls)-footer-extra">
            @RenderExtraFooter
        </div>
    </div>
}

@if (ShowToday && !IsRange
    && !IsShowTime && Picker != DatePickerType.Time)
{
    <div class="@(PrefixCls)-footer">
        <a class="@(PrefixCls)-today-btn" 
           @onclick="e => { OnSelectDate(DateTime.Now); Close(); }">
            今天
        </a>
    </div>
}

@if (IsShowTime)
{
    <div class="@(PrefixCls)-footer">
        <ul class="@(PrefixCls)-ranges">
            <li class="@(PrefixCls)-now">
                <a class="@(PrefixCls)-now-btn"
                   @onclick="e => { OnSelectTime(DateTime.Now); Close(); }">
                    此刻
                </a>
            </li>
            <li class="@(DatePicker.PrefixCls)-ok">
                <Button Type="@ButtonType.Primary"
                           OnClick="e => DatePicker.Close()">
                    确 定
                </Button>
            </li>
        </ul>
    </div>
}

@code {
    [Parameter]
    public bool IsWeek { get; set; } = false;

    [Parameter]
    public bool ShowToday { get; set; } = false;

    [Parameter]
    public bool IsShowTime { get; set; } = false;

    private string GetRowClass(DateTime viewDate)
    {
        string selectedRowClass = IsWeek && DateHelper.IsSameWeak(viewDate, Value) ? $"{PrefixCls}-week-panel-row-selected" : "";
        string rowClass = IsWeek ? $"{PrefixCls}-week-panel-row" : "";

        return $"{rowClass} {selectedRowClass}";
    }

    private void OnRowSelect(DateTime viewDate)
    {
        if (IsWeek)
        {
            OnSelectDate(viewDate);
        }
    }

    private void OnValueSelect(DateTime viewDate)
    {
        if (!IsWeek)
        {
            OnSelectDate(viewDate);
        }
    }
}