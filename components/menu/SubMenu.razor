@namespace AntBlazor
@inherits AntDomComponentBase
@using AntBlazor.Internal

@if (RootMenu.InternalMode == MenuMode.Inline)
{
    <li class="@ClassMapper.Class" role="menuitem" @key="Key" style="position:relative;@Style">
        <div class="ant-menu-submenu-title" role="button" @onclick="HandleOnTitleClick" aria-haspopup="true">

            @if (Title.IsT0)
            {
                <span>@Title.AsT0</span>
            }
            else
            {
                @Title.AsT1
            }

            <i class="ant-menu-submenu-arrow"></i>
        </div>
        <ul direction="ltr" class="@SubMenuMapper.Class" role="menu" aria-expanded="@IsOpen">
            <CascadingValue Value="this">
                @ChildContent
            </CascadingValue>
        </ul>
    </li>
}
else
{
    string placementName = RootMenu.Mode == MenuMode.Horizontal ? "bottomLeft" : "rightTop";
    string prefixCls = $"{RootMenu.PrefixCls}-submenu";

    <CascadingValue Value="prefixCls" Name="PrefixCls">
        <OverlayTrigger @ref="_overlayTrigger"
                        Style="width: 100%;"
                        Disabled="Disabled"
                        Placement="@(RootMenu.Mode == MenuMode.Horizontal ? PlacementType.BottomLeft : PlacementType.Right)"
                        OnVisibleChange="OnOverlayVisibleChange"
                        OnOverlayHiding="OnOverlayHiding"
                        PlacementCls="@($"{prefixCls}-placement-{placementName} {prefixCls}-popup")"
                        OverlayEnterCls="@($"{prefixCls}-{RootMenu.Theme} ")"
                        OverlayLeaveCls="@($"{prefixCls}-{RootMenu.Theme} ")"
                        OverlayHiddenCls="ant-menu-hidden">
            <ChildContent>
                <li class="@ClassMapper.Class" role="menuitem" @key="Key" style="position:relative;@Style">
                    <div class="@(prefixCls)-title" role="button" @onclick="HandleOnTitleClick">
                        @if (Title.IsT0)
                        {
                            <span>@Title.AsT0</span>
                        }
                        else
                        {
                            @Title.AsT1
                        }

                        <i class="@(prefixCls)-arrow"></i>
                    </div>
                </li>
            </ChildContent>
            <Overlay>
                <ul direction="ltr" class="@(SubMenuMapper.Class)" role="menu">
                    <CascadingValue Value="this">
                        @ChildContent
                    </CascadingValue>
                </ul>
            </Overlay>
        </OverlayTrigger>
    </CascadingValue>
}

<style>

    .ant-menu-vertical.ant-menu-sub,
    .ant-menu-vertical.ant-menu-sub:not(.zoom-big-enter-active):not(.zoom-big-leave-active), .ant-menu-vertical-left.ant-menu-sub:not(.zoom-big-enter-active):not(.zoom-big-leave-active), .ant-menu-vertical-right.ant-menu-sub:not(.zoom-big-enter-active):not(.zoom-big-leave-active) {
        overflow: initial;
    }

    .ant-menu.ant-menu-sub.ant-menu-vertical.ant-menu-submenu-popup {
        top: 0;
        left: 100%;
    }

    .ant-menu-submenu.ant-menu-submenu-horizontal > .ant-menu.ant-menu-sub.ant-menu-vertical.ant-menu-submenu-popup {
        top: 50px;
        left: initial;
        min-width: 100%
    }
</style>
