<Button Type="primary" OnClick="@(()=>{ _visible = true; })">
    Open Modal
</Button>

<Modal Title="@_title"
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       DestroyOnClose="true">
    <Form @ref="_form"
          Model="@_formModel"
          LabelCol="new ColLayoutParam { Span = 6 }"
          WrapperCol="new ColLayoutParam { Span = 18 }">
        <FormItem Label="Basic Select">
            <Select DataSource="@_persons"
                    @bind-Value="@context.SelectValue1"
                    LabelName="@nameof(Person.Name)"
                    ValueName="@nameof(Person.Id)"
                    DisabledName="@nameof(Person.NotAvailable)"
                    Placeholder="Select a person"
                    AllowClear>
            </Select>
        </FormItem>
        <FormItem Label="Tags">
            <Select DataSource="@_persons"
                    @bind-Value="@context.SelectValue2"
                    LabelName="@nameof(Person.Name)"
                    ValueName="@nameof(Person.Id)"
                    DisabledName="@nameof(Person.NotAvailable)"
                    Placeholder="Select a person"
                    AllowClear>
            </Select>
        </FormItem>
        <FormItem Label="Multiple">
            <Select DataSource="@_persons"
                    @bind-Value="@context.SelectValue3"
                    LabelName="@nameof(Person.Name)"
                    ValueName="@nameof(Person.Id)"
                    DisabledName="@nameof(Person.NotAvailable)"
                    Placeholder="Select a person"
                    AllowClear>
            </Select>
        </FormItem>
        <FormItem>
            <Button OnClick="@(ResetFormHandler)">Reset Form</Button>
        </FormItem>
    </Form>
</Modal>

@code {

    private class FormModel
    {
        public int? SelectValue1 { get; set; } = 7;
        public int? SelectValue2 { get; set; }
        public int? SelectValue3 { get; set; }
    }

    private class Person
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public bool NotAvailable { get; set; }
    }

    private  FormModel _formModel = new();
    private Form<FormModel> _form;
    private readonly string _title = "Basic Modal";
    private bool _visible;
    private List<Person> _persons;

    protected override void OnInitialized()
    {
        _persons = new List<Person>
        {
            new()
            {
                Id = 1,
                Name = "Jack",
                NotAvailable = true
            },
            new()
            {
                Id = 2,
                Name = "Lucy"
            },
            new()
            {
                Id = 3,
                Name = "Yaoming"
            },
            new()
            {
                Id = 4,
                Name = "Frieda"
            },
            new()
            {
                Id = 5,
                Name = "Kathy",
                NotAvailable = true
            },
            new()
            {
                Id = 6,
                Name = "Kate"
            },
            new()
            {
                Id = 7,
                Name = "Eric"
            },
            new()
            {
                Id = 8,
                Name = "Jake",
                NotAvailable = true
            },
            new()
            {
                Id = 9,
                Name = "Olaf"
            },
            new()
            {
                Id = 10,
                Name = "Sven"
            },
            new()
            {
                Id = 11,
                Name = "Bernd",
                NotAvailable = true
            },
            new()
            {
                Id = 12,
                Name = "Jane"
            },
            new()
            {
                Id = 13,
                Name = "John"
            }
        };
    }

    private void ResetFormHandler()
    {
        _form.Reset();
    }

    private void HandleOk(MouseEventArgs e)
    {
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        _visible = false;
    }
}
