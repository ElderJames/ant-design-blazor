<AntTitle Level="1">Radio</AntTitle>
<AntText>Radio.</AntText>
<AntTitle Level="2">When to use</AntTitle>
<AntParagraph>
    <ul>
        <li>Used to select a single state from multiple options.</li>
        <li>The difference from Select is that Radio is visible to the user and can facilitate the comparison of choice, which means there shouldn't be too many of them.</li>
    </ul>
</AntParagraph>
<br />
<h2>Examples</h2>
<br />
<DemoCard>
    <Title>Basic</Title>
    <Description>The simplest use.</Description>
    <Demo>
        <AntRadio>Radio</AntRadio>
    </Demo>
</DemoCard>
<br />

<DemoCard>
    <Title>Disabled</Title>
    <Description>Radio unavailable.</Description>
    <Demo>
        <AntRadio Checked Disabled="@Disabled">
            Disabled
        </AntRadio>
        <br />
        <AntRadio Disabled="@Disabled">
            Disabled
        </AntRadio>
        <div style="margin-top: 20px">
            <AntButton Type="primary" OnClick="_=>Disabled=!Disabled">Toggle Disabled</AntButton>
        </div>
    </Demo>
</DemoCard>

@code
    {
    bool Disabled = true;
}
<DemoCard>
    <Title>Radio Group</Title>
    <Description>A group of radio components.</Description>
    <Demo>
        <RadioGroup @bind-Value="@_value">
            <Radio Value="1">A</Radio>
            <Radio Value="2">B</Radio>
            <Radio Value="3">C</Radio>
            <Radio Value="4">D</Radio>
        </RadioGroup>
    </Demo>
</DemoCard>

@code
    {
    void onChange(string value)
    {

    }

    string _value = "1";
}

<DemoCard>
    <Title>Vertical Radio.Group</Title>
    <Description>Vertical Radio.Group, with more radios.</Description>
    <Demo>
        <RadioGroup @bind-Value="@radioValue">
            <Radio Style="@style" Value="A">Option A</Radio>
            <Radio Style="@style" Value="B">Option B</Radio>
            <Radio Style="@style" Value="C">Option C</Radio>
            <Radio Style="@style" Value="M">
                More...
                @if (radioValue == "M")
                {
                    <Input type="text" />
                }
            </Radio>
        </RadioGroup>
    </Demo>
</DemoCard>

@code
    {
    string radioValue = "A";
    string style = "display: block;height:30px;line-height:30px";
}

<DemoCard>
    <Title>RadioGroup with name</Title>
    <Description>
        Passing the `nzName` property to all `input[type="radio"]` that are in the same RadioGroup. It is usually used to let the browser see your `nz-radio-group` as a real "group" and keep the default behavior. For example, using left/right keyboard arrow to change your selection that in the same `nz-radio-group`.
    </Description>
    <Demo>
        <RadioGroup @bind-Value="radioValue2" Name="radiogroup">
            <Radio Value="A">A</Radio>
            <Radio Value="B">B</Radio>
            <Radio Value="C">C</Radio>
            <Radio Value="D">D</Radio>
        </RadioGroup>
    </Demo>
</DemoCard>

@code
    {
    string radioValue2 = "A";
}

<DemoCard>
    <Title>Radio Style</Title>
    <Description>
        The combination of radio button style.
    </Description>
    <Demo>
        <RadioGroup @bind-Value="radioValue3">
            <Radio RadioButton Value="A">Hangzhou</Radio>
            <Radio RadioButton Value="B">Shanghai</Radio>
            <Radio RadioButton Value="C">Beijing</Radio>
            <Radio RadioButton Value="D">Chengdu</Radio>
        </RadioGroup>
        <br />
        <br />
        <RadioGroup @bind-Value="radioValue3">
            <Radio RadioButton Value="A">Hangzhou</Radio>
            <Radio RadioButton Value="B" Disabled>Shanghai</Radio>
            <Radio RadioButton Value="C">Beijing</Radio>
            <Radio RadioButton Value="D">Chengdu</Radio>
        </RadioGroup>
        <br />
        <br />
        <RadioGroup @bind-Value="radioValue3">
            <Radio RadioButton Value="A" Disabled>Hangzhou</Radio>
            <Radio RadioButton Value="B" Disabled>Shanghai</Radio>
            <Radio RadioButton Value="C" Disabled>Beijing</Radio>
            <Radio RadioButton Value="D" Disabled>Chengdu</Radio>
        </RadioGroup>
    </Demo>
</DemoCard>
@code
{
    string radioValue3 = "A";
}

<DemoCard>
    <Title>Solid radio button</Title>
    <Description>
        Solid radio button style.
    </Description>
    <Demo>
        <RadioGroup @bind-Value="radioValue4" ButtonStyle="solid">
            <Radio RadioButton Value="A">Hangzhou</Radio>
            <Radio RadioButton Value="B">Shanghai</Radio>
            <Radio RadioButton Value="C">Beijing</Radio>
            <Radio RadioButton Value="D">Chengdu</Radio>
        </RadioGroup>
    </Demo>
</DemoCard>
@code
{
    string radioValue4 = "A";
}

<DemoCard>
    <Title>Size</Title>
    <Description>
        There are three sizes available: large, medium, and small. It can coordinate with input box.
    </Description>
    <Demo>
        <RadioGroup @bind-Value="radioValue5" Size="large">
            <Radio RadioButton Value="A">Hangzhou</Radio>
            <Radio RadioButton Value="B">Shanghai</Radio>
            <Radio RadioButton Value="C">Beijing</Radio>
            <Radio RadioButton Value="D">Chengdu</Radio>
        </RadioGroup>
        <br />
        <br />
        <RadioGroup @bind-Value="radioValue5">
            <Radio RadioButton Value="A">Hangzhou</Radio>
            <Radio RadioButton Value="B">Shanghai</Radio>
            <Radio RadioButton Value="C">Beijing</Radio>
            <Radio RadioButton Value="D">Chengdu</Radio>
        </RadioGroup>
        <br />
        <br />
        <RadioGroup @bind-Value="radioValue5" Size="small">
            <Radio RadioButton Value="A">Hangzhou</Radio>
            <Radio RadioButton Value="B">Shanghai</Radio>
            <Radio RadioButton Value="C">Beijing</Radio>
            <Radio RadioButton Value="D">Chengdu</Radio>
        </RadioGroup>
    </Demo>
</DemoCard>
@code
{
    string radioValue5 = "A";
}