<Tree @ref="_tree"
      ShowIcon DataSource="_games"
      Multiple="@_multiple"
      TitleExpression="x => x.DataItem.Text"
      ChildrenExpression="x => x.DataItem.Items"
      IconExpression="x => x.DataItem.Icon"
      IsLeafExpression="x => x.DataItem.Items?.Count == 0"
      KeyExpression="x => x.DataItem.Id"
      @bind-SelectedKey="@_selectedKey"
      @bind-SelectedData="@_selectedData"
      @bind-SelectedNode="@_selectedNode"
      @bind-SelectedKeys="@_selectedKeys"
      TItem="GameElement">
</Tree>

<Divider>Single</Divider>
<span>bind-SelectedKey:@_selectedKey</span>
<br />
<span>bind-SelectedData:@(System.Text.Json.JsonSerializer.Serialize(_selectedData))</span>
<br />
<span>bind-SelectedNode:@(System.Text.Json.JsonSerializer.Serialize(_selectedNode?.Id))</span>
<Divider>Multiple</Divider>
<Switch @bind-Value="_multiple" />Multiple
<br />
<span>bind-SelectedKeys:@(System.Text.Json.JsonSerializer.Serialize(_selectedKeys))</span>
<Divider>Action</Divider>
<Button OnClick="AddSon">Add Son Node</Button>
<Button OnClick="DeleteNode">Delete Node</Button>

@code {
    private bool _multiple;

    private Tree<GameElement> _tree;

    private string _selectedKey;

    private GameElement _selectedData;

    private TreeNode<GameElement> _selectedNode;

    private string[] _selectedKeys;

    private void AddSon()
    {
        if (_selectedNode == null) return;

        var id = new Random().Next(1000)
            .ToString();
        _selectedNode.DataItem.Items.Add(new GameElement(id, $"Node {id}")
        {
            Items = new List<GameElement>()
        });
    }

    private void DeleteNode()
    {
        if (_selectedNode == null) return;

        if (_selectedNode.ParentNode != null)
        {
            _selectedNode.ParentNode.DataItem.Items.Remove(_selectedNode.DataItem);
        }
        else
        {
            _tree.DataSource.Remove(_selectedNode.DataItem);
        }

        StateHasChanged();
    }

    List<GameElement> _games = new()
    {
        new GameElement("100", "XBox", "windows")
        {
            Items = new List<GameElement>
            {
                new("101", "Halo"),
                new("102", "Gears of War"),
                new("103", "Forza Motosport"),
            }
        },
        new GameElement("200", "PlayStation", "desktop")
        {
            Items = new List<GameElement>
            {
                new("201", "Uncharted"),
                new("202", "God Of War"),
                new("203", "The Order:1886"),
            }
        },
        new GameElement("300", "Switch", "mobile")
        {
            Items = new List<GameElement>
            {
                new("301", "Super Mario Bros"),
                new("302", "The Legend of Zelda"),
            }
        }
    };

    private record GameElement(string Id, string Text, string Icon = null)
    {
        public List<GameElement> Items { get; set; } = new();
    }
}