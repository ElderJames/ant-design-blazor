<Tree  DefaultExpandAll BlockNode
      ShowIcon DataSource="games"
      TitleExpression="x => x.DataItem.Text"
      ChildrenExpression="x => x.DataItem.Items"
      IsLeafExpression="x => x.DataItem.Items?.Count == 0"
      KeyExpression="x => x.DataItem.Id"
      TItem="GameElement" OnDragEnd="e=> { }">
</Tree>

@code{
    List<GameElement> games;

    List<GameElement> dig(string path,int level = 2)
    {
        var list = new List<GameElement>();

        for (int i = 0; i < 10; i++)
        {
            var key = $"{path}-{i}";
            var node = new GameElement(key, key);
            if (level > 0)
            {
                node.Items = dig(key, level - 1);
            }
            list.Add(node);
        }
        return list;
    }

    private record GameElement(string Id, string Text)
    {
        public List<GameElement> Items { get; set; } = new List<GameElement>();
    }

    protected override void OnInitialized()
    {
        games = dig("0");
        base.OnInitialized();
    }
}
