@namespace AntDesign
@inherits AntDomComponentBase
<CascadingValue Value="this">
    @ChildContent
</CascadingValue>

<div class="@ClassMapper.Class" style="@Style" id="@Id">
    <!---->
    @if (TabBarExtraContent != null)
    {
        <div class="ant-tabs-extra-content" style="float: right;">
            @TabBarExtraContent
        </div>
    }

    <!--Tab bar-->
    <div role="tablist" class="ant-tabs-nav">
        <div class="ant-tabs-nav-wrap">
            <div class="ant-tabs-nav-list" style="transform: translate(0px, 0px);">
                @foreach (var pane in _panes)
                {
                    if (pane.IsActive)
                    {
                        <button @ref="_activeTabBar" type="button" role="tab" aria-selected="@(pane.IsActive)" tabindex="0" class="ant-tabs-tab ant-tabs-tab-active" id="@($"rc-tabs-{Id}-tab-{pane.Key}")" aria-controls="@($"rc-tabs-{Id}-tab-{pane.Key}")"
                                draggable="@Draggable.ToString()"
                                @ondragover:preventDefault
                                ondragover="event.preventDefault();"
                                @ondragstart="(e)=>HandleDragStart(e, pane)"
                                @ondrop="(e)=>HandleDrop(pane)">
                            @if (Type == TabType.EditableCard && pane.Closable)
                            {
                                <div>
                                    @pane.Tab
                                    <Icon class="ant-tabs-close-x" type="close" @onclick="(e)=>RemoveTabPane(pane)" />
                                </div>
                            }
                            else
                            {
                                @pane.Tab
                            }
                        </button>
                    }
                    else
                    {
                        <button type="button" role="tab" aria-selected="@(pane.IsActive)" tabindex="0" class="ant-tabs-tab@(pane.Disabled?" ant-tabs-tab-disabled":string.Empty)" id="@($"rc-tabs-{Id}-tab-{pane.Key}")" aria-controls="@($"rc-tabs-{Id}-tab-{pane.Key}")"
                                disabled="@(pane.Disabled)"
                                @onclick="(e)=>ActivatePane(pane)"
                                @onclick:stopPropagation
                                draggable="@Draggable.ToString()"
                                ondragover="event.preventDefault();"
                                @ondragstart="(e)=>HandleDragStart(e, pane)"
                                @ondrop="(e)=>HandleDrop(pane)">
                            @if (Type == TabType.EditableCard && pane.Closable)
                            {
                                <div>
                                    @pane.Tab
                                    <Icon class="ant-tabs-close-x" type="close" @onclick="(e)=>RemoveTabPane(pane)" />
                                </div>
                            }
                            else
                            {
                                @pane.Tab
                            }
                        </button>
                    }
                }
                <div class="ant-tabs-ink-bar ant-tabs-ink-bar-animated" style="@_inkStyle"></div>
            </div>
        </div>
        <div class="ant-tabs-nav-operations ant-tabs-nav-operations-hidden">
            <button tabindex="-1" class="ant-tabs-nav-more" id="rc-tabs-0-more" aria-expanded="false" aria-haspopup="listbox" aria-hidden="true" aria-controls="rc-tabs-0-more-popup" style="visibility: hidden; order: 1;" type="button">
                <span class="anticon anticon-ellipsis" role="img" aria-label="ellipsis">
                    <svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" viewBox="64 64 896 896" focusable="false" width="1em" height="1em" data-icon="ellipsis"><path d="M 176 511 a 56 56 0 1 0 112 0 a 56 56 0 1 0 -112 0 Z m 280 0 a 56 56 0 1 0 112 0 a 56 56 0 1 0 -112 0 Z m 280 0 a 56 56 0 1 0 112 0 a 56 56 0 1 0 -112 0 Z" /></svg>
                </span>
            </button>
        </div>
    </div>
    <!--Tab content-->
    <div class="ant-tabs-content-holder ">
        <div class="ant-tabs-content ant-tabs-content-@TabPosition">
            @foreach (var pane in _panes)
            {
                @if (pane.IsActive)
                {
                    <div tabindex="0" class="ant-tabs-tabpane ant-tabs-tabpane-active" id="@($"rc-tabs-{Id}-panel-{pane.Key}")" role="tabpanel" aria-hidden="false" aria-labelledby="@($"rc-tabs-{Id}-panel-{pane.Key}")">@pane.ChildContent</div>
                }
                else
                {
                    <div tabindex="-1" class="ant-tabs-tabpane" id="@($"rc-tabs-{Id}-panel-{pane.Key}")" role="tabpanel" aria-hidden="true" aria-labelledby="@($"rc-tabs-{Id}-panel-{pane.Key}")" style="display: none;">@pane.ChildContent</div>
                }

            }
        </div>
    </div>
</div>