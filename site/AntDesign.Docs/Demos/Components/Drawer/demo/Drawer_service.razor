@inject DrawerService DrawerService
@inject ModalService Confirm

<Input @bind-Value="@_value"/>
<br/>
<br/>
<Button OnClick="OpenFastDialogMode" Type="primary">Use Fast Dialog Mode</Button>
<Button OnClick="OpenDialogMode" Type="primary">Use Dialog Mode</Button>
<br/>
<Button OnClick="OpenComponent" Type="primary">Use Component</Button>
<Button OnClick="OpenContent" Type="primary">Use Template</Button>


@code {
    private string _value = "blazor";

    // Fast dialog mode
    private async Task OpenFastDialogMode()
    {
        var result = await DrawerService.CreateDialogAsync<DrawerTemplateDemo, string, string>(_value, title: "Component", width: 350);

        if (result != null) _value = result;
    }

    // Dialog mode
    private async Task OpenDialogMode()
    {
        var options = new DrawerOptions
        {
            Title = "Component",
            Width = 350
        };

        var result = await DrawerService.CreateDialogAsync<DrawerTemplateDemo, string, string>(options, _value);

        if (result != null) _value = result;
    }

    // Use component
    private async Task OpenComponent()
    {
        var options = new DrawerOptions
        {
            Title = "Component",
            Width = 350
        };

        var drawerRef = await DrawerService.CreateAsync<DrawerTemplateDemo, string, string>(options, _value);

        drawerRef.OnClosed = async result =>
        {
            Console.WriteLine("OnAfterClosed:" + result);
            if (result != null) _value = result;
            await InvokeAsync(StateHasChanged);
        };
    }

    // Use content
    private IDrawerRef _drawerRef;

    private async Task OpenContent()
    {
        RenderFragment content =@<div>
                                    <Input @bind-Value="@_value"/><br/>
                                    <Button OnClick="CloseDrawer">close</Button>
                                </div>;

        var options = new DrawerOptions
        {
            Title = "Drawer",
            Width = 350,
            Content = content
        };

        _drawerRef = await DrawerService.CreateAsync(options);

        _drawerRef.OnClosing = async handle =>
        {
            Console.WriteLine("Closing Drawer");
        };
    }

    private async Task CloseDrawer()
    {
        if (_drawerRef != null)
        {
            await _drawerRef.CloseAsync();
        }
    }

}