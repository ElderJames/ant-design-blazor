<div>
    <div>
        @foreach (var item in LstTags)
        {
            <Tag Mode="closeable" OnClose="()=>OnClose(item)">@item</Tag>
        }
        @if (InputVisible)
        {
            <Input @ref="_inputRef" Style="width: 78px" Size="small" @bind-Value="_inputValue" OnBlur="HandleInputConfirm" OnPressEnter="HandleInputConfirm" />
        }
        else
        {
            <Tag Mode="checkable" Class="editable-tag" OnClick="OnChecked">
                <Icon Type="plus" />New Tag
            </Tag>
        }
    </div>
</div>
<style>
    .editable-tag {
        background: rgb(255, 255, 255);
        border-style: dashed;
    }
</style>

@code {
    private bool InputVisible { get; set; }
    private string _inputValue;
    private Input<string> _inputRef;
    private List<string> LstTags { get; set; } = new();

    protected override void OnInitialized()
    {
        LstTags.Add("Apple");
        LstTags.Add("Mongo");
        LstTags.Add("Peach");
    }

    private async Task OnChecked()
    {
        InputVisible = !InputVisible;
        if (_inputRef != null)
            await _inputRef.Focus();
    }

    private void OnClose(string item)
    {
        LstTags.Remove(item);
    }

    private void HandleInputConfirm()
    {
        if (string.IsNullOrEmpty(_inputValue)) return;

        var res = LstTags.Find(s => s == _inputValue);

        if (string.IsNullOrEmpty(res))
        {
            LstTags.Add(_inputValue);
        }

        _inputValue = "";
        InputVisible = false;
    }
}