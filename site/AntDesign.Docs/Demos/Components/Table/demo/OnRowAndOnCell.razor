@using System.ComponentModel
@using AntDesign.TableModels

<Table TItem="Data" DataSource="@data" OnRow="OnRow" OnHeaderRow="OnHeaderRow">
    <Column @bind-Field="@context.Name" OnCell="OnCell" OnHeaderCell="OnHeaderCell">
        <a>@context.Name</a>
    </Column>
    <Column @bind-Field="@context.Age"></Column>
    <Column @bind-Field="@context.Address">
        <TitleTemplate>
            <span> <Icon Type="environment" /> Address </span>
        </TitleTemplate>
    </Column>
    <Column @bind-Field="@context.Tags">
        @foreach (var tag in context.Tags)
        {
            var color = tag.Length > 5 ? "geekblue" : "green";
            if (tag == "loser")
            {
                color = "volcano";
            }
            <Tag Color="@color">@tag</Tag>
        }
    </Column>
</Table>

@code{
    Data[] data = new Data[]
    {
        new()
        {
            Key = "1",
            Name = "John Brown",
            Age = 32,
            Address = "New York No. 1 Lake Park",
            Tags = new[] {"nice", "developer"}
        },
        new()
        {
            Key = "2",
            Name = "Jim Green",
            Age = 42,
            Address = "London No. 1 Lake Park",
            Tags = new[] { "loser"}
        },
        new()
        {
            Key = "3",
            Name = "Joe Black",
            Age = 32,
            Address = "Sidney No. 1 Lake Park",
            Tags = new[] { "cool", "teacher" }
        }
    };

    public class Data
    {
        [DisplayName("Key")]
        public string Key { get; set; }

        [DisplayName("Name")]
        public string Name { get; set; }

        [DisplayName("Age")]
        public int Age { get; set; }

        [DisplayName("Address")]
        public string Address { get; set; }

        [DisplayName("Tags")]
        public string[] Tags { get; set; }
    }

    Dictionary<string, object> OnRow(RowData<Data> row)
    {
        Action<MouseEventArgs> OnClick = args =>
        {
            Console.WriteLine($"row {row.Data.Key} was clicked");
        };

        return new Dictionary<string, object> {
            { "onclick", OnClick },
            { "id", row.Data.Key },
        };
    }

    Dictionary<string, object> OnHeaderRow()
    {
        Action<MouseEventArgs> OnClick = args =>
        {
            Console.WriteLine("header row was clicked");
        };

        return new Dictionary<string, object> {
            { "onclick", OnClick },
            { "id", "header-row" },
        };
    }

    Dictionary<string, object> OnCell(RowData rowData)
    {
        var row = (RowData<Data>)rowData;

        Action<MouseEventArgs> OnClick = args =>
        {
            Console.WriteLine($"cell {row.Data.Name} was clicked");
        };

        return new Dictionary<string, object> {
            { "onclick", OnClick },
        };
    }

    Dictionary<string, object> OnHeaderCell()
    {
        Action<MouseEventArgs> onClick = args =>
        {
            Console.WriteLine("header cell was clicked");
        };

        return new Dictionary<string, object> {
            { "onclick", onClick },
        };
    }
}