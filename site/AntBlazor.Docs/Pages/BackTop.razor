<AntTitle level="1">BackTop回到顶部</AntTitle>
<AntText>返回页面顶部的操作按钮。</AntText>
<AntTitle level="2">何时使用</AntTitle>
<AntParagraph>
    <ul>
        <li>当页面内容区域比较长时；</li>
        <li>当用户需要频繁返回顶部查看相关内容时。</li>
    </ul>
</AntParagraph>

<br />
<h2>演示</h2>
<br />
<DemoCard>
    <Title>基本</Title>
    <Description>最简单的用法。</Description>
    <Demo>
        <AntBackTop Title="Scroll down to see the bottom-right gray button."></AntBackTop>
    </Demo>
</DemoCard>
<br />

<DemoCard>
    <Title>自定义样式</Title>
    <Description>可以自定义回到顶部按钮的样式，限制宽高：40px * 40px。</Description>
    <Demo>
        <AntBackTop Title="Scroll down to see the bottom-right gray button."></AntBackTop>
    </Demo>
</DemoCard>
<br />

<br />
<h2>API</h2>
<br />

<p>
    When <code>TriggerJsPrompt</code> is executed by selecting the component's <b>Trigger JavaScript Prompt</b> button, the JavaScript <code>showPrompt</code> function provided in the <em>wwwroot/exampleJsInterop.js</em> file is executed.
</p>
<p>
    The <code>showPrompt</code> function accepts user input (the user's name), which is HTML-encoded and returned to the <code>Prompt</code> method and ultimately back to the component. The component stores the user's name in a local variable, <code>name</code>.
</p>
<p>
    The string stored in <code>name</code> is incorporated into a welcome message, which is passed to a JavaScript function, <code>displayWelcome</code>, which renders the welcome message into a heading tag.
</p>

<h2>Invoke .NET methods from JavaScript functions</h2>

<p>Examine the console output in your broswer's developer tools when selecting the following buttons to trigger .NET static and instance methods.</p>

<p>When the button to call the C# static method is selected, the JavaScript <code>returnArrayAsyncJs</code> function in <em>wwwroot/exampleJsInterop.js</em> is executed. The function uses <code>DotNet.invokeMethodAsync</code> to call the C# static method <code>ReturnArrayAsync</code>. The C# method returns an integer array to the JavaScript function, which writes the array to the console.</p>

<p>When the button to call the C# instance method is selected, <code>ExampleJsInterop.CallHelloHelperSayHello</code> is called and passes a name to the method. <code>ExampleJsInterop.CallHelloHelperSayHello</code> invokes the JavaScript function <code>sayHello</code> with a new instance of <code>HelloHelper</code>. The name is passed to <code>HelloHelper</code>'s constructor, which sets the <code>HelloHelper.Name</code> property. When the JavaScript function <code>sayHello</code> is executed, <code>HelloHelper.SayHello</code> returns the <code>Hello, {Name}!</code> message, which is written to the console.</p>
